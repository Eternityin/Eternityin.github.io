[{"title":"个人服务器搭建AdGuardHome指南","url":"/2022/04/06/个人服务器搭建AdguardHome指南/","content":"\n自从上个月在腾讯云使用新用户账号购入了人生中第一台服务器，便本着每时每刻都要利用好的原则想部署一些长期项目运行，但苦于我目前的能力不足，一直想不到做什么东西，直到前几天网上冲浪时灵光一现，想到可以利用AdGuardHome搭一个私人DNS项目。说干就干。\n\n### AdGuardHome的安装\n\n官方提供了两种简单方式安装：自动安装与docker安装。我原本是使用docker安装，但在阴差阳错之下使用自动安装，所以先重点解释docker安装中的创建并运行过程。\n\n#### [Docker安装](https://hub.docker.com/r/adguard/adguardhome \"官方介绍\")\n\n```Docker\ndocker run --name adguardhome\\\n    --restart unless-stopped\\\n    -v /my/own/workdir:/opt/adguardhome/work\\\n    -v /my/own/confdir:/opt/adguardhome/conf\\\n    -p 53:53/tcp -p 53:53/udp\\\n    -p 67:67/udp -p 68:68/udp\\\n    -p 80:80/tcp -p 443:443/tcp -p 443:443/udp -p 3000:3000/tcp\\\n    -p 853:853/tcp\\\n    -p 784:784/udp -p 853:853/udp -p 8853:8853/udp\\\n    -p 5443:5443/tcp -p 5443:5443/udp\\\n    -d adguard/adguardhome\n```\n\n- `53`：DNS 端口。即其他设备访问 AdGuard Home 进行 DNS 解析的默认端口。因为部分系统不支持自定义 DNS 端口，所以不建议自定义。部署前务必要查看是否有其它程序占用。\n- `67`, `68`： DHCP 端口。除非想代替你路由上的 DHCP 服务器，否则用不到。（可忽略）\n- `80`: 管理页面默认 HTTP 端口。可忽略，在初始化页面设置管理端口为 3000 端口即可。\n- `443`：HTTPS 和 DoH 端口。本地内网环境不需要。（稍后可更改）\n- `853`：DoT 端口。不使用相关功能可忽略。\n- `3000`：初始化设置端口。除非通过配置文件去设置，否则必须开启。（自定义）\n\n后面设置的内容可看**自动安装**部分\n\n\n\n#### 自动安装\n\n终端运行以下命令\n\n```shell\ncurl -s -S -L https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/scripts/install.sh | sh -s -- -v\n```\n\n命令结束后AdGuardHome会自动启动，并提示在浏览器中访问控制面板\n\n```\nAdGuard Home is available on the following addresses:\nGo to http://127.0.0.1:3000\nGo to http://部署的服务器IP地址:3000\n```\n\n进入来到步骤2：\n\n![image1](https://blog-1310574018.cos.ap-guangzhou.myqcloud.com/image1.png)\n\n在此页面中建议可更改网页管理界面的监听端口，因为我们是部署在云端上的。对于**DNS服务器**不建议更改任何选项，因为对于大多数设备访问DNS使用的是53端口，更改会导致无法正常访问。\n\n完成此步骤后进入下一步骤设置你的访问账号，即可进入仪表盘\n\n\n\n接下来的操作请移步至**P3TERX**大佬的博客阅读，这篇文章的诞生离不开他的详细操作，[阅读地址](https://p3terx.com/archives/use-adguard-home-to-build-dns-to-prevent-pollution-and-remove-ads-2.html)。\n\n这篇文章的重点是大佬未提及的内容：**AdGuardHome**的加密设置\n\n![iamge2](https://blog-1310574018.cos.ap-guangzhou.myqcloud.com/iamge2.png)\n\n### **AdGuardHome**的加密设置\n\n![imge3](https://blog-1310574018.cos.ap-guangzhou.myqcloud.com/imge3.png)\n\n由于众所周知的原因，在无相关资质下，个人不能对外提供DNS解析服务的能力。但“对外”这个词使用的模拟两可，只要腾讯云方面检测到53端口具备该条件，那么就会发出警告。因此，如果想要继续使用原始DNS服务，只能通过设置白名单或黑名单，或者在本地部署。而我的办法则是迫不得已关闭原始DNS服务，使用更难检测到的DOH和DOT协议。关于这两种协议的详细实现过程可以看维基百科等内容。\n\n要实现DNS的加密，我们当然需要一个域名做伪装。购买域名，将域名指向服务器的IP地址后，接下来则是要安装ssl证书，我最初选择使用acme.sh安装免费证书，但在脚本验证所有权上遇到了阻碍：在国内部署未备案的域名会自动被云服务商重定向。由此，我选择的办法是通过云服务商申请免费证书。接下来就跳入了另一个坑：如何部署证书。我所知的部署证书的方式是通过apache2或nginx，但这两种均以我的能力不足而失败。最后，经他人求教，使用面板部署更方便一些。于是我使用宝塔面板的海外版：[**aaPanel**](https://github.com/aaPanel/aaPanel)解决问题。这里就不再阐述其安装过程了。\n\n进入aaPanel面板并做好必要设置后，就准备开始部署证书了。\n\n\n\n#### 网站证书部署\n\n首先选择**Website**，之后点击**Add site**出现以下界面\n\n![image4](https://blog-1310574018.cos.ap-guangzhou.myqcloud.com/image4.png)\n\n在**Domain name**中输入自己域名，之后选择**HTTP redirect to HTTPS**就可以**Submit**。\n\n站点成功生成后，在其条目的最右侧找到**Conf**选项，点击后找到**SSL**，选择**Other certificate**如下图所示。\n\n![image7](https://blog-1310574018.cos.ap-guangzhou.myqcloud.com/image7.png)\n\n将申请到的证书下载至本地，将证书内容按照提示分别复制到合适的地方，记得打开右上角的**Force HTTPS**选项，最后保存内容，不出意外，证书很快部署成功。\n\n\n\n#### 链接重定向\n\n处于某种原因，AdGuardHome的**HTTPS 端口**应该避免使用默认的443端口，而其他端口无法使用HTTPS连接，因此我们需要使用重定向的手段来进行HTTPS连接。\n\n再次点开**Conf**选项，找到**Config**，如下图所示。\n\n![image6](https://blog-1310574018.cos.ap-guangzhou.myqcloud.com/imge6.png)\n\n在443端口下粘贴上如下规则\n\n```\n  location /dns-query { # 这里的 Path 可以是任意\n        proxy_http_version 1.1;\n        proxy_set_header Host $http_host;\n        proxy_buffering off;\n        proxy_redirect off;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        # 记得修改端口\n        proxy_pass https://服务器IP地址:自设的HTTPS端口/dns-query; # 这里的 Path 必须为 dns-query\n    }\n```\n\n之后保存即可完成所有配置。\n\n将Nginx服务重启后，在浏览器中访问**https://你的域名/dns-query**，网站页面出现**Bad Request**即可判断能正常使用。\n\n\n\n### 参考链接\n\n- [AdGuard Home 自建 DNS 防污染、去广告教程 #1 - 安装部署详解(Docker)](https://p3terx.com/archives/use-adguard-home-to-build-dns-to-prevent-pollution-and-remove-ads-1.html)\n- [AdGuard Home 自建 DNS 防污染、去广告教程 #2 - 优化增强设置详解](https://p3terx.com/archives/use-adguard-home-to-build-dns-to-prevent-pollution-and-remove-ads-2.html)\n- [AdGuardHome 自建公共DNS服务器](https://aoyouer.com/posts/adguardhome-public-dns/)\n\n\n\n> **本文作者：**[Halo](https://github.com/Eternityin)\n>\n> **版权声明：**本博客所有文章除特别声明外，均采用 [CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh) 许可协议。非商业转载及引用请注明出处（作者、原文链接），商业转载请联系作者获得授权。\n","tags":["日常","生活"]},{"title":"主题测试","url":"/2022/03/29/主题测试/","content":"\n这是主题测试文档，使用Hexo框架，基于[AriCloud](https://github.com/aircloud/hexo-theme-aircloud)主题搭建，采用腾讯云COS作为图床，并魔改（删除）一部分功能，后续慢慢改造\n\n测试图片\n\n![1](https://blog-1310574018.cos.ap-guangzhou.myqcloud.com/1.jpg)\n\n![](https://blog-1310574018.cos.ap-guangzhou.myqcloud.com/2.jpg)\n\n完毕\n","tags":["日常","测试"]}]